name: Najít, nahradit a regulární výrazy
goals: |
    Cílem lekce je poznat užitečnost funkce *Najít a nahradit* jak při psaní v běžném jazyce, tak při používání značkovacích jazyků. Významnou součástí lekce jsou základy práce s *regulárními výrazy*, které umožňují pracovat s hledáním i nahrazováním efektivněji a spolehlivěji.
reading: |
    ### Začít zlehka
    
    V této lekci je důležité začít jednoduchým a motivačním způsobem. Doporučuji názorná [videa na Youtube](http://google.com/search?q=regular+expressions+basics+video). Dají se objevit i videa v češtině, [například od vtipného řečníka Davida Grudla](http://www.youtube.com/watch?v=uzHIXuGzaaY).
    
    ### Texty
    
    Pokud už tušíte, o co jde, přečtěte si nějaké texty — v angličtině je jich poměrně dost a nejsou těžké, např. [An Introduction to Regular Expressions](http://www.codeproject.com/Articles/939/An-Introduction-to-Regular-Expressions) (další výsledky z googlu pro [regular expressions easy](http://www.google.com/search?q=regular+expressions+easy)). V češtině něco [najdete také](http://www.google.com/search?q=regulární+výrazy), ale je to většinou o něco složitější text.
    
    ### Hříčky, hry a interaktivní kurzy
    
    Teď už byste měli mít základní představu, co to regulární výrazy jsou (my se budeme bavit o tzv. *Perl-Compatible Regular Expressions* a o obdobné funkcionalitě v kancelářských textových procesorech). 
    
    Ověřte si své znalosti na [nějaké hře](http://www.google.com/search?q=regexp+game). Doporučuji [Regex Golf](http://regex.alf.nu), který má i hezké nastavení obtížnosti, nebo [hru a výukový kurz v jednom RegexOne](http://regexone.com). Pokud si chcete vyzkoušet nějaký regulární výraz, který si vymyslíte, využijte [nějaký tester](http://www.google.com/search?q=regex+tester).
    
    ### Hrajeme si s dokumenty
    
    Nejspíše se vše, co jste doteď přečetli, týkalo regulárních výrazů v nějakém textovém editoru pro editaci kódu (jako je například v tomto kurzu doporučovaný [Adobe Brackets](http://brackets.io)). V textovém procesoru MS Word (příp. jeho alternativě OO Writer) to vypadá trochu jinak — a též se jim jinak říká: [*wildcards*](http://www.google.com/search?q=using+ms+word+wildcards) v angličtině a [*zástupné znaky*](http://www.google.com/search?q=ms+word+zástupné+znaky) v češtině. Hodně toho najdete také pokud budete hledat [search and replace in word](http://www.google.com/search?q=search+and+replace+in+word), popř. česky [najít a nahradit ms word](http://www.google.com/search?q=najít+a+nahradit+ms+word).
    
    ### Shrnutí na jednu A4
    
    Při psaní regulárních výrazů si nemusíte vše pamatovat. Najděte si [cheatsheet k regulárním výrazům](http://www.google.com/search?q=regex+cheat+sheet) nebo [cheatsheet s wildcards](http://www.google.com/search?q=word+wildcards+cheat+sheet) a klidně si ho vytiskněte.
rubrics:
    - "Jaké chyby udělal/a autor/ka v odpovědích na vědomostní otázky (1-7)? Jaké zdroje mohou poradit, jak pracovat s regulárními výrazy lépe?"
    - "Jsou všechny soubory ze závěrečných dvou úkolů správně odevzdané?"
    - "Je motivace pro výběr dokumentu v předposledním úkolu přesvědčivá?"
preface: |
    U této lekce je podstatné pracovat správně se soubory: sledujte zadání, kde je napsáno, jaké formáty (HTML, Markdown, Word či jeho alternativy) máte užít a jak s nimi pracovat. Některé úkoly vyžadují, abyste soubor uložili vícekrát a přiložili průběžné verze v ZIPu — dejte si na to pozor.
    
    Pokud něčemu nerozumíte a nemůžete to dohledat pomocí Google, zkuste se obrátit na kolegy v diskusním fóru v ISu.    
---
bloom: remember
count: 2
questions:
    - "K čemu se používají regulární výrazy?"
    - "Co jsou to zástupné znaky v aplikacích MS Word a OO Writer?"
    - "Popište běžné klávesové zkratky pro funkce *Najít* a *Najít a nahradit* v programech ve vašem operačním systému (uveďte, jaký operační systém používáte)."
    - "Kde najdete funkci *Najít a nahradit* v MS Word?"
    - "Jaké klávesové zkratky pro hledání a nahrazování můžete využít v programu *Adobe Brackets*?"
    - "Co označuje v rámci řetězce v poli *Nahradit* výraz `\\1`? V jakém programu je možné tento výraz využít?"
    - "Co označuje v rámci řetězce v poli *Nahradit* výraz `$1`? V jakém programu je možné tento výraz využít?"
---
bloom: apply
questions:
    - "Zadejte několik příkladů frází, které můžete zadat do Googlu, abyste se dozvěděli více o regulárních výrazech a jejich použití. Jeden z odkazů si vyberte a krátce shrňte obsah nalezeného článku a jeho přínos pro vás."
    - "Kdo poprvé představil koncept regulárních výrazů? Stručně popište, o koho šlo."
---
bloom: apply
count: 2
allowRepeat: question
vars:
    regexp: ["^p", "?", "^t", "[-]", "^?", "<", "^#", ">", "^$", "()", "^^", "[!]", "^%", "{;}", "^v", "@", "^n", "*", "^+", "^=", "^e", "^d", "^f", "^g", "^l", "^m", "^~", "^s", "^-", "^b", "^w", "^a"]
questions: |
    Jaký význam má mezi zástupnými znaky v MS Word/OO Writer `%regexp%`? Popište *vlastními slovy* a napište konkrétní příklad užití (co byste díky tomuto zástupnému znaku mohli najít).
---
bloom: apply
count: 2
allowRepeat: question
vars:
    regexp:
        - "[0-9]{3} [0-9]{3} [0-9]{3}'"
        - "čp\\. {0-9}+'"
        - "[0-9]{3} [0-9]{2}'"
        - "[a-z]+@[a-z]+\\.[a-z]+'"
        - "(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?'"
        - "<[a-z0-9]+>.+</[a-z0-9]+>'"
        - "\\*\\*[^*]+\\*\\*'"
        - "\\[.+\\]\\(.+\\)'"
        - "\\n#+ .+'"
        - ".+'"
        - "...'"
        - "[^a]+"
questions: |
    Popište, jaký řetězec vyhovuje regulárnímu výrazu `%regexp%`. Napište konkrétní příklad. Jaký by mohl být význam takového řetězce? Vytvořte podobný výraz pomocí zástupných znaků ve MS Wordu (či OO Writeru).
---
bloom: create
input: file
comments: 10
questions: |
    Najděte na serveru [Ulož.to](http://uloz.to) nějaký pro vás zajímavý dokument uložený ve formátu MS Word (koncovka .doc nebo .docx), který má zároveň alespoň 3000 slov.
    
    Tento dokument upravte v MS Wordu/OO Writeru tak, aby vyhovoval typografickým pravidlům (nejen z hlediska formátování, ale především z hlediska samotného textu — tzn. správné odstavce, sémanticky značené titulky, pevné mezery, správně umístěná interpunkce, české uvozovky, pomlčky a spojovníky atp.). **Původní verzi i upravený dokument** uložte a v archivu ZIP nahrejte do přílohy.
    
    Do vstupního pole popište hledané výrazy (využívající zástupné znaky), které jste použili pro dotažení dokumentu do typograficky slušné podoby. Zároveň popište, **proč je právě pro vás tento dokument zajímavý** a jak jste jej na serveru Ulož.to našli.
---
bloom: create
input: file
comments: 10
vars:
    wikipage: ["Knihovnictví", "Informační věda", "Informační systém", "Legislativa", "Jackson Pollock", "Surrealismus", "Salvador Dalí", "Medaile Za hrdinství", "Česko", "Slovensko", "Rusíni", "Brooklynský most", "Myanmar", "Bangladéš", "Fair trade", "Sedmá generace", "Panda velká", "Medvědovití", "Čínská lidová republika", "Filozofická fakulta Masarykovy univerzity", "Filosofie", "Věda"]
questions: |
    Stáhněte zdrojový kód stránky *„%wikipage%“* na české Wikipedii. Vyřízněte z něj obsah elementu `body` a ten **pomocí funkce Najít a nahradit** v editoru *Adobe Brackets* (či ekvivalentním textovém editoru) převeďte do co nejčistší syntaxe Markdown.
    
    Popište, **jaké regulární výrazy jste použili pro hledání a nahrazování** (alespoň čtyři). Během práce soubor **alespoň třikrát uložte** a odevzdejte tyto průběžné verze i výsledek v archivu ZIP.
